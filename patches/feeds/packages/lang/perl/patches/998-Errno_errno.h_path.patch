diff --git a/ext/Errno/Errno_pm.PL b/ext/Errno/Errno_pm.PL
index d565f31..2271973 100644
--- a/ext/Errno/Errno_pm.PL
+++ b/ext/Errno/Errno_pm.PL
@@ -111,6 +111,17 @@ sub default_cpp {
 
 sub get_files {
     my %file = ();
+    # When cross-compiling we may store a path for gcc's "sysroot" option:
+    my $sysroot = $Config{sysroot} || '';
+    my $linux_errno_h;
+    if ($^O eq 'linux') {
+        # Some Linuxes have weird errno.hs which generate
+        # no #file or #line directives
+        ($linux_errno_h) = grep { -e $_ } map { "$_/errno.h" }
+            "$sysroot/usr/include", "$sysroot/usr/local/include",
+            split / / => $Config{locincpth};
+    }
+ 
     # VMS keeps its include files in system libraries
     if ($^O eq 'VMS') {
 	$file{'Sys$Library:DECC$RTLDEF.TLB'} = 1;
@@ -124,19 +135,12 @@ sub get_files {
 	     $file{$1} = 1;
 	}
     } elsif ($^O eq 'linux' &&
-	      $Config{gccversion} ne '' && 
-	      $Config{gccversion} !~ /intel/i
-	      # might be using, say, Intel's icc
-	     ) {
-    # When cross-compiling we may store a path for gcc's "sysroot" option:
-    my $sysroot = $Config{sysroot} || '';
-	# Some Linuxes have weird errno.hs which generate
-	# no #file or #line directives
-	my ($linux_errno_h) = grep { -e $_ } map { "$_/errno.h" }
-	    "$sysroot/usr/include", "$sysroot/usr/local/include",
-	    split / / => $Config{locincpth} or
-		die "Cannot find errno.h";
-	$file{$linux_errno_h} = 1;
+              $Config{gccversion} ne '' && 
+              $Config{gccversion} !~ /intel/i &&
+              # might be using, say, Intel's icc
+              $linux_errno_h
+             ) {
+        $file{$linux_errno_h} = 1;
     } elsif ($^O eq 'haiku') {
 	# hidden in a special place
 	$file{'/boot/develop/headers/posix/errno.h'} = 1;
